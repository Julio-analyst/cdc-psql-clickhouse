version: '3.8'

services:
  # PostgreSQL Database (Source)
  postgres:
    image: quay.io/debezium/example-postgres:2.6
    container_name: postgres-source
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inventory
      TZ: Asia/Jakarta
      PGTZ: Asia/Jakarta
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cdc-network

  # Zookeeper
  zookeeper:
    image: quay.io/debezium/zookeeper:2.6
    container_name: zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    networks:
      - cdc-network

  # Kafka
  kafka:
    image: quay.io/debezium/kafka:2.6
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - cdc-network

  # Kafka Connect with Debezium
  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.5.0
    container_name: kafka-connect
    depends_on:
      - kafka
      - postgres
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
    volumes:
      - ./plugins:/usr/share/java/debezium-connector-postgres
    networks:
      - cdc-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ClickHouse Keeper
  clickhouse-keeper:
    image: clickhouse/clickhouse-keeper:24.3-alpine
    container_name: clickhouse-keeper
    ports:
      - "9181:9181"
    volumes:
      - ./clickhouse-config/keeper_config.xml:/etc/clickhouse-keeper/keeper_config.xml
    networks:
      - cdc-network

  # ClickHouse Server
  clickhouse:
    image: clickhouse/clickhouse-server:24.3.3.102
    container_name: clickhouse
    environment:
      TZ: Asia/Jakarta
    depends_on:
      - clickhouse-keeper
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse-config/config.xml:/etc/clickhouse-server/config.d/config.xml
      - ./clickhouse-config/users.xml:/etc/clickhouse-server/users.d/users.xml
    networks:
      - cdc-network

  # Kafdrop (Kafka Web UI)
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    depends_on:
      - kafka
    ports:
      - "9001:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms128M -Xmx256M -Xss512K -XX:+UseG1GC -XX:MaxGCPauseMillis=100"
      SERVER_SERVLET_CONTEXTPATH: "/"
    networks:
      - cdc-network

  # Kafka Tools (for testing)
  kafka-tools:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-tools
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c", "sleep infinity"]
    networks:
      - cdc-network

volumes:
  postgres_data:
  clickhouse_data:

networks:
  cdc-network:
    driver: bridge
